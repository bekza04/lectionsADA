"=============================Exeptions========================================="
#исключения ошибки = обекты которые прерывают работу кода

from webbrowser import get


SyntaxError
#исключение которое выхрдит при синтаксической ошибке 
"""
(
SyntaxError: unexpected EOF while parsing
(когда мы не закрыли скобочку или кавычку)
"""

"""
a = 
SyntaxError: invalid syntax
(когда мы сделали что-то не правильно в синтаксисе)
"""


NameError
#исключение которое выходит когда мы обращаемся к несущечтвующей переменной 

IndexError
#исключение котрое выходит когда мы обращемся по несущечтвующему индексу

KeyError
#исключение котрое выходит когда обращаемся по несущечтвующему ключу

ValueError
#когда мы передаем в фунцию некорректный для нее тип данных 
#когда мы распаковываем интегрируемый обьект  на несколько и колво переменных не совпадает с колвом элементов в интегрируемом обьекте 

IndentationError
#выходит когда мы неправильно используем отсупы 

TypeError
#возникает когда мы пытаемся использовать методы не свойсвтенные какомуто типу данных или когда мы пытаемся передать функции больше иои меньше аргументов чем принимает функции 


"=============================вызов исключение==============================="

# raise NameError('my exception')

"=====================обработка исключений========================"
#чтобы код не прекращал свою работу мы можем использовать конструкцию try-except и обработать вызванное исключение

# try:
#     # код который возможно вызовет ошибку
#     num = int(input("put numbers"))
# except ValueError: # error might be out
#     print("not number")
# else:
#     # код который отработает только если ошибка не вышла
# finally:
#     # код который отработает в любом случае


# try:
#     raise ValueError
# except (SyntaxError, NameError):
#     print("вышла одна из ошибок") #raise ValueError


# try:
#     raise Exception
# except: 
#     print("отловленная ошибка")



# try:
#     raise TypeError("type error")
# except Exception as error:
#     print("ошибка", type(error),__name__)
     

#1
# try:
#     pass
# except:
#     pass
# else:
#     pass
# finally:
#     pass


#2
#напишите код который пытается вывести значение переменной, не определенной ранее, и обрабатывает исключение, выводя сообщение "Такой переменной не существует!".



#3
#Напишите код, который принимает два числа от пользователя и выводит результат их деления. Обработайте исключение, которое выйдет при делении на ноль, выводя сообщение "На ноль делить нельзя"


# num1 = int(input("put number1"))
# num2 = int(input("put number2"))

# try:
#     print(num1/num2)
# except ZeroDivisionError: 
#    print("на ноль делить нельзя")

#4
#Напишите код, который принимает две строки от пользователя, преобразует их в целые числа и выводит их сумму. Обработайте исключение которое выйдет в случае если пользователь передал не число а строку, выводя сообщение "Введите число!".

# num1 = input()
# num2 = input()

# try:
#     print(int(num1) + int(num2))
# except ValueError:
#     print("введи число")


#5
#  Напишите код, который пытается получить значение по ключу из словаря. Обработайте исключение, которое выйдет если такого ключа нет, выводя сообщение "Нет такого ключа!".

# dict_ = {"a": 1, "b": 2, "c": 3}

# try:
#     print (dict_["d"])
# except TypeError:
#     print("mistake")

#6
#напишите код, который пытается получить элемент списка по индексу. Обработайте исключение которое выйдет если такого индекса нет, выводя сообщение "Нет такого элемента

# list_ = [1, 2, 3, 4, 5]

# try:
#     print(list_[9])
# except IndexError:
#     print("нет такого элемента")

#7
#Напишите код, который принимает возраст от пользователя и выбрасывает исключение ValueError с сообщением "Доступ запрещён", если возраст меньше 18. Обработайте это исключение, выводя сообщение "Введён некорректный возраст". Используйте блоки else и finally для вывода сообщений "Спасибо" и "До свидания!" соответственно.



# try:
#     age = int(input("введи возраст"))
#     if age < 18:
#          raise ValueError("доступ ограничен")
   
# except ValueError:
#       print("not age")



#8
#Напишите код, который принимает два числа от пользователя и выводит результат их деления. Обработайте исключения ValueError и ZeroDivisionError, выводя сообщение "Произошла ошибка!".


# try:
#     num1 = int(input())
#     num2 = int(input())
#     print(num1/num2)
# except (ValueError, ZeroDivisionError):
#     print('произошла ошибка')
    


#9
#Напишите код, который принимает сумму денег от пользователя и выбрасывает исключение ValueError с сообщением "Сумма не может быть отрицательной!", если сумма меньше 0. Обработайте это исключение и выведите сообщение ошибки. Если исключение не возникло, выведите сумму.

# try:
#     num1 = int(input("введи сумму"))
#     if num1 < 0:
#         raise ValueError("сумма не может быть меньше 0")
# except ValueError:
#     print("put correct number")
# else:
#     print(num1)


#10
# Напишите код, который пытается вызвать метод get для списка. Обработайте исключение AttributeError, не выполняя никаких действий при возникновении ошибки.

# try:
#     list_ =[1, 2, 3]
#     print(list_)
# except AttributeError:
#     print("mistake") mistaken



#11
#Напишите код, который пытается сложить строку и число. Обработайте исключение TypeError, выводя сообщение "Unsupported option".


# num = 2
# str_ = "heloo"

# try:
#     print(num+str_)
# except TypeError:
#     print("unsupported problem")


#12

# try: 
#     list_.extend(range(10))
#     print
# except NameError:
#     print("list does not exist")

#13


#14
# password = "12345"
# if len(password) < 6:
#     raise ValueError("not long")

#15
# warehouse = [
#     ['1', '2', '3'],
#     [1, 2],
#     [[1], [2], [3]],
#     [[1, 2, 3], [1, 2, 3, 4, 5], {'hello': 'world'}],
#     [1, 2],
#     [[1], [2], [3]],
#     [[1, 2, 3], [1, 2, 3, 4, 5], {'hello': 'world'}],
#     [1, 2],
#     [[1], [2], [3]],
#     [[1, 2, 3], [1, 2, 3, 4, 5], {'hello': 'world'}]
# ]

# if len(warehouse) > 10:
#     raise ValueError("в коробке не должно быть больще 10")


# for box in warehouse:
#     if len(box) > 3:
#         raise ValueError("в коробке не должно быть больше 3")


#16

# try:
#     import lamabimgo
# except ImportError:
#     print("такого модуля нет")

# #17
# n = 1000000000000000000000

# try:
#     while n > 1:
#      n -= 1
# except KeyboardInterrupt:
#     print("Nope")


#18

# inp1 = input().split()
# list_= []

# for element in inp1:
#     try:
#         list_.append(int(element))
#     except ValueError:
#         print("данный эдемент не число")
        
# print(list_)